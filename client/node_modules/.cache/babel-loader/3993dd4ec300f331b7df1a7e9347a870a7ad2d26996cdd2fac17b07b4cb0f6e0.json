{"ast":null,"code":"import{healthCheck}from'./api';export const testBackendConnection=async()=>{try{console.log('Testing backend connection...');const response=await healthCheck();console.log('‚úÖ Backend connection successful:',response);return{success:true,data:response};}catch(error){console.error('‚ùå Backend connection failed:',error);return{success:false,error:error.message};}};export const testAllEndpoints=async()=>{const endpoints=[{name:'Health Check',test:healthCheck}// Add more endpoint tests as needed\n];const results=[];for(const endpoint of endpoints){try{const result=await endpoint.test();results.push({name:endpoint.name,status:'‚úÖ Success',data:result});}catch(error){results.push({name:endpoint.name,status:'‚ùå Failed',error:error.message});}}return results;};export const debugApiConnection=()=>{console.log('üîç API Connection Debug Info:');console.log('API Base URL:',process.env.REACT_APP_API_URL||'http://localhost:3000/api');console.log('Environment:',process.env.NODE_ENV);console.log('Current URL:',window.location.href);// Test the connection\ntestBackendConnection().then(result=>{if(result.success){console.log('‚úÖ API connection is working!');}else{console.log('‚ùå API connection failed:',result.error);console.log('üí° Make sure to set REACT_APP_API_URL in your environment variables');}});};","map":{"version":3,"names":["healthCheck","testBackendConnection","console","log","response","success","data","error","message","testAllEndpoints","endpoints","name","test","results","endpoint","result","push","status","debugApiConnection","process","env","REACT_APP_API_URL","NODE_ENV","window","location","href","then"],"sources":["/Users/whitefoxstudios/money/client/src/utils/testConnection.js"],"sourcesContent":["import { healthCheck } from './api';\n\nexport const testBackendConnection = async () => {\n  try {\n    console.log('Testing backend connection...');\n    const response = await healthCheck();\n    console.log('‚úÖ Backend connection successful:', response);\n    return { success: true, data: response };\n  } catch (error) {\n    console.error('‚ùå Backend connection failed:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const testAllEndpoints = async () => {\n  const endpoints = [\n    { name: 'Health Check', test: healthCheck },\n    // Add more endpoint tests as needed\n  ];\n\n  const results = [];\n  \n  for (const endpoint of endpoints) {\n    try {\n      const result = await endpoint.test();\n      results.push({ name: endpoint.name, status: '‚úÖ Success', data: result });\n    } catch (error) {\n      results.push({ name: endpoint.name, status: '‚ùå Failed', error: error.message });\n    }\n  }\n\n  return results;\n};\n\nexport const debugApiConnection = () => {\n  console.log('üîç API Connection Debug Info:');\n  console.log('API Base URL:', process.env.REACT_APP_API_URL || 'http://localhost:3000/api');\n  console.log('Environment:', process.env.NODE_ENV);\n  console.log('Current URL:', window.location.href);\n  \n  // Test the connection\n  testBackendConnection().then(result => {\n    if (result.success) {\n      console.log('‚úÖ API connection is working!');\n    } else {\n      console.log('‚ùå API connection failed:', result.error);\n      console.log('üí° Make sure to set REACT_APP_API_URL in your environment variables');\n    }\n  });\n}; "],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CAEnC,MAAO,MAAM,CAAAC,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CAC/C,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,WAAW,CAAC,CAAC,CACpCE,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEC,QAAQ,CAAC,CACzD,MAAO,CAAEC,OAAO,CAAE,IAAI,CAAEC,IAAI,CAAEF,QAAS,CAAC,CAC1C,CAAE,MAAOG,KAAK,CAAE,CACdL,OAAO,CAACK,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,MAAO,CAAEF,OAAO,CAAE,KAAK,CAAEE,KAAK,CAAEA,KAAK,CAACC,OAAQ,CAAC,CACjD,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CAC1C,KAAM,CAAAC,SAAS,CAAG,CAChB,CAAEC,IAAI,CAAE,cAAc,CAAEC,IAAI,CAAEZ,WAAY,CAC1C;AAAA,CACD,CAED,KAAM,CAAAa,OAAO,CAAG,EAAE,CAElB,IAAK,KAAM,CAAAC,QAAQ,GAAI,CAAAJ,SAAS,CAAE,CAChC,GAAI,CACF,KAAM,CAAAK,MAAM,CAAG,KAAM,CAAAD,QAAQ,CAACF,IAAI,CAAC,CAAC,CACpCC,OAAO,CAACG,IAAI,CAAC,CAAEL,IAAI,CAAEG,QAAQ,CAACH,IAAI,CAAEM,MAAM,CAAE,WAAW,CAAEX,IAAI,CAAES,MAAO,CAAC,CAAC,CAC1E,CAAE,MAAOR,KAAK,CAAE,CACdM,OAAO,CAACG,IAAI,CAAC,CAAEL,IAAI,CAAEG,QAAQ,CAACH,IAAI,CAAEM,MAAM,CAAE,UAAU,CAAEV,KAAK,CAAEA,KAAK,CAACC,OAAQ,CAAC,CAAC,CACjF,CACF,CAEA,MAAO,CAAAK,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAK,kBAAkB,CAAGA,CAAA,GAAM,CACtChB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5CD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEgB,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAAC,CAC1FnB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEgB,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC,CACjDpB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEoB,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAEjD;AACAxB,qBAAqB,CAAC,CAAC,CAACyB,IAAI,CAACX,MAAM,EAAI,CACrC,GAAIA,MAAM,CAACV,OAAO,CAAE,CAClBH,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC7C,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEY,MAAM,CAACR,KAAK,CAAC,CACrDL,OAAO,CAACC,GAAG,CAAC,qEAAqE,CAAC,CACpF,CACF,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}