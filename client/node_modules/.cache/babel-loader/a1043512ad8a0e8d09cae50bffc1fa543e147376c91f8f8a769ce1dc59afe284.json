{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{toast}from'react-hot-toast';import api from'../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('token'));// Check if user is authenticated on mount\nuseEffect(()=>{const checkAuth=async()=>{if(token){try{const response=await api.get('/auth/profile');setUser(response.data.user);}catch(error){console.error('Auth check failed:',error);localStorage.removeItem('token');setToken(null);}}setLoading(false);};checkAuth();},[token]);// Login function\nconst login=async(email,password)=>{try{const response=await api.post('/auth/login',{email,password});const{token:newToken,user:userData}=response.data;localStorage.setItem('token',newToken);setToken(newToken);setUser(userData);// Set default auth header\napi.defaults.headers.common['Authorization']=\"Bearer \".concat(newToken);toast.success('Login successful!');return{success:true};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed';toast.error(message);return{success:false,error:message};}};// Register function\nconst register=async userData=>{try{const response=await api.post('/auth/register',userData);const{token:newToken,user:newUser}=response.data;localStorage.setItem('token',newToken);setToken(newToken);setUser(newUser);// Set default auth header\napi.defaults.headers.common['Authorization']=\"Bearer \".concat(newToken);toast.success('Registration successful!');return{success:true};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed';toast.error(message);return{success:false,error:message};}};// Logout function\nconst logout=()=>{localStorage.removeItem('token');setToken(null);setUser(null);delete api.defaults.headers.common['Authorization'];toast.success('Logged out successfully');};// Update user profile\nconst updateProfile=async profileData=>{try{const response=await api.put('/auth/profile',profileData);setUser(response.data.user);toast.success('Profile updated successfully!');return{success:true};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to update profile';toast.error(message);return{success:false,error:message};}};// Change password\nconst changePassword=async(currentPassword,newPassword)=>{try{await api.put('/auth/change-password',{currentPassword,newPassword});toast.success('Password changed successfully!');return{success:true};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to change password';toast.error(message);return{success:false,error:message};}};// Generate API key\nconst generateApiKey=async(name,permissions)=>{try{const response=await api.post('/auth/api-keys',{name,permissions});toast.success('API key generated successfully!');return{success:true,apiKey:response.data.apiKey};}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to generate API key';toast.error(message);return{success:false,error:message};}};// Get API keys\nconst getApiKeys=async()=>{try{const response=await api.get('/auth/api-keys');return response.data.apiKeys;}catch(error){toast.error('Failed to get API keys');return[];}};// Revoke API key\nconst revokeApiKey=async keyId=>{try{await api.delete(\"/auth/api-keys/\".concat(keyId));toast.success('API key revoked successfully!');return{success:true};}catch(error){var _error$response6,_error$response6$data;const message=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to revoke API key';toast.error(message);return{success:false,error:message};}};// Check if user has permission\nconst hasPermission=(resource,action)=>{if(!user)return false;if(user.role==='admin')return true;const resourcePermissions=user.permissions[resource];if(!resourcePermissions)return false;return resourcePermissions[action]||false;};// Check if user has role\nconst hasRole=roles=>{if(!user)return false;const allowedRoles=Array.isArray(roles)?roles:[roles];return allowedRoles.includes(user.role);};// Get user's project permissions\nconst getProjectPermissions=projectId=>{if(!user)return{read:false,write:false,deploy:false,admin:false};// This would typically check project-specific permissions\n// For now, return basic permissions based on user role\nconst basePermissions={read:hasPermission('projects','read'),write:hasPermission('projects','update'),deploy:hasPermission('projects','deploy'),admin:hasPermission('projects','delete')};return basePermissions;};// Update user preferences\nconst updatePreferences=async preferences=>{try{const response=await api.put('/auth/profile',{preferences});setUser(response.data.user);toast.success('Preferences updated successfully!');return{success:true};}catch(error){var _error$response7,_error$response7$data;const message=((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to update preferences';toast.error(message);return{success:false,error:message};}};// Get login history\nconst getLoginHistory=async()=>{try{const response=await api.get('/auth/login-history');return response.data.loginHistory;}catch(error){toast.error('Failed to get login history');return[];}};// Set auth header when token changes\nuseEffect(()=>{if(token){api.defaults.headers.common['Authorization']=\"Bearer \".concat(token);}else{delete api.defaults.headers.common['Authorization'];}},[token]);const value={user,loading,token,login,register,logout,updateProfile,changePassword,generateApiKey,getApiKeys,revokeApiKey,hasPermission,hasRole,getProjectPermissions,updatePreferences,getLoginHistory,isAuthenticated:!!user&&!!token};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","response","get","data","error","console","removeItem","login","email","password","post","newToken","userData","setItem","defaults","headers","common","concat","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","generateApiKey","name","permissions","apiKey","_error$response5","_error$response5$data","getApiKeys","apiKeys","revokeApiKey","keyId","delete","_error$response6","_error$response6$data","hasPermission","resource","action","role","resourcePermissions","hasRole","roles","allowedRoles","Array","isArray","includes","getProjectPermissions","projectId","read","write","deploy","admin","basePermissions","updatePreferences","preferences","_error$response7","_error$response7$data","getLoginHistory","loginHistory","value","isAuthenticated","Provider"],"sources":["/Users/whitefoxstudios/money/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport api from '../utils/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await api.get('/auth/profile');\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      const { token: newToken, user: userData } = response.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      \n      // Set default auth header\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const { token: newToken, user: newUser } = response.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(newUser);\n      \n      // Set default auth header\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n    \n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to update profile';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.put('/auth/change-password', { currentPassword, newPassword });\n      toast.success('Password changed successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to change password';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Generate API key\n  const generateApiKey = async (name, permissions) => {\n    try {\n      const response = await api.post('/auth/api-keys', { name, permissions });\n      toast.success('API key generated successfully!');\n      return { success: true, apiKey: response.data.apiKey };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to generate API key';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Get API keys\n  const getApiKeys = async () => {\n    try {\n      const response = await api.get('/auth/api-keys');\n      return response.data.apiKeys;\n    } catch (error) {\n      toast.error('Failed to get API keys');\n      return [];\n    }\n  };\n\n  // Revoke API key\n  const revokeApiKey = async (keyId) => {\n    try {\n      await api.delete(`/auth/api-keys/${keyId}`);\n      toast.success('API key revoked successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to revoke API key';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Check if user has permission\n  const hasPermission = (resource, action) => {\n    if (!user) return false;\n    if (user.role === 'admin') return true;\n    \n    const resourcePermissions = user.permissions[resource];\n    if (!resourcePermissions) return false;\n    \n    return resourcePermissions[action] || false;\n  };\n\n  // Check if user has role\n  const hasRole = (roles) => {\n    if (!user) return false;\n    const allowedRoles = Array.isArray(roles) ? roles : [roles];\n    return allowedRoles.includes(user.role);\n  };\n\n  // Get user's project permissions\n  const getProjectPermissions = (projectId) => {\n    if (!user) return { read: false, write: false, deploy: false, admin: false };\n    \n    // This would typically check project-specific permissions\n    // For now, return basic permissions based on user role\n    const basePermissions = {\n      read: hasPermission('projects', 'read'),\n      write: hasPermission('projects', 'update'),\n      deploy: hasPermission('projects', 'deploy'),\n      admin: hasPermission('projects', 'delete')\n    };\n    \n    return basePermissions;\n  };\n\n  // Update user preferences\n  const updatePreferences = async (preferences) => {\n    try {\n      const response = await api.put('/auth/profile', { preferences });\n      setUser(response.data.user);\n      toast.success('Preferences updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to update preferences';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  // Get login history\n  const getLoginHistory = async () => {\n    try {\n      const response = await api.get('/auth/login-history');\n      return response.data.loginHistory;\n    } catch (error) {\n      toast.error('Failed to get login history');\n      return [];\n    }\n  };\n\n  // Set auth header when token changes\n  useEffect(() => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    generateApiKey,\n    getApiKeys,\n    revokeApiKey,\n    hasPermission,\n    hasRole,\n    getProjectPermissions,\n    updatePreferences,\n    getLoginHistory,\n    isAuthenticated: !!user && !!token\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}