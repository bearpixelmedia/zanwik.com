{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';const supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;export const supabase=createClient(supabaseUrl,supabaseAnonKey);// Auth helpers\nexport const auth={// Sign in with email/password\nsignIn:async(email,password)=>{const{data,error}=await supabase.auth.signInWithPassword({email,password});if(error)throw error;return data;},// Sign up with email/password\nsignUp:async(email,password)=>{const{data,error}=await supabase.auth.signUp({email,password});if(error)throw error;return data;},// Sign out\nsignOut:async()=>{const{error}=await supabase.auth.signOut();if(error)throw error;},// Get current user\ngetCurrentUser:async()=>{const{data:{user}}=await supabase.auth.getUser();return user;},// Listen to auth changes\nonAuthStateChange:callback=>{return supabase.auth.onAuthStateChange(callback);}};// Database helpers\nexport const db={// Projects\nprojects:{getAll:async()=>{const{data,error}=await supabase.from('projects').select('*').order('created_at',{ascending:false});if(error)throw error;return data;},getById:async id=>{const{data,error}=await supabase.from('projects').select('*').eq('id',id).single();if(error)throw error;return data;},create:async project=>{const{data,error}=await supabase.from('projects').insert(project).select().single();if(error)throw error;return data;},update:async(id,updates)=>{const{data,error}=await supabase.from('projects').update(updates).eq('id',id).select().single();if(error)throw error;return data;},delete:async id=>{const{error}=await supabase.from('projects').delete().eq('id',id);if(error)throw error;}},// Analytics\nanalytics:{getOverview:async()=>{const{data,error}=await supabase.from('analytics_overview').select('*').single();if(error)throw error;return data;},getRevenue:async function(){let period=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'30d';const{data,error}=await supabase.from('analytics_revenue').select('*').eq('period',period).order('date',{ascending:true});if(error)throw error;return data;}},// Users\nusers:{getAll:async()=>{const{data,error}=await supabase.from('users').select('*').order('created_at',{ascending:false});if(error)throw error;return data;},getById:async id=>{const{data,error}=await supabase.from('users').select('*').eq('id',id).single();if(error)throw error;return data;}}};export default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","auth","signIn","email","password","data","error","signInWithPassword","signUp","signOut","getCurrentUser","user","getUser","onAuthStateChange","callback","db","projects","getAll","from","select","order","ascending","getById","id","eq","single","create","project","insert","update","updates","delete","analytics","getOverview","getRevenue","period","arguments","length","undefined","users"],"sources":["/Users/whitefoxstudios/money/client/src/utils/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Auth helpers\nexport const auth = {\n  // Sign in with email/password\n  signIn: async (email, password) => {\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    })\n    if (error) throw error\n    return data\n  },\n\n  // Sign up with email/password\n  signUp: async (email, password) => {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password\n    })\n    if (error) throw error\n    return data\n  },\n\n  // Sign out\n  signOut: async () => {\n    const { error } = await supabase.auth.signOut()\n    if (error) throw error\n  },\n\n  // Get current user\n  getCurrentUser: async () => {\n    const { data: { user } } = await supabase.auth.getUser()\n    return user\n  },\n\n  // Listen to auth changes\n  onAuthStateChange: (callback) => {\n    return supabase.auth.onAuthStateChange(callback)\n  }\n}\n\n// Database helpers\nexport const db = {\n  // Projects\n  projects: {\n    getAll: async () => {\n      const { data, error } = await supabase\n        .from('projects')\n        .select('*')\n        .order('created_at', { ascending: false })\n      if (error) throw error\n      return data\n    },\n\n    getById: async (id) => {\n      const { data, error } = await supabase\n        .from('projects')\n        .select('*')\n        .eq('id', id)\n        .single()\n      if (error) throw error\n      return data\n    },\n\n    create: async (project) => {\n      const { data, error } = await supabase\n        .from('projects')\n        .insert(project)\n        .select()\n        .single()\n      if (error) throw error\n      return data\n    },\n\n    update: async (id, updates) => {\n      const { data, error } = await supabase\n        .from('projects')\n        .update(updates)\n        .eq('id', id)\n        .select()\n        .single()\n      if (error) throw error\n      return data\n    },\n\n    delete: async (id) => {\n      const { error } = await supabase\n        .from('projects')\n        .delete()\n        .eq('id', id)\n      if (error) throw error\n    }\n  },\n\n  // Analytics\n  analytics: {\n    getOverview: async () => {\n      const { data, error } = await supabase\n        .from('analytics_overview')\n        .select('*')\n        .single()\n      if (error) throw error\n      return data\n    },\n\n    getRevenue: async (period = '30d') => {\n      const { data, error } = await supabase\n        .from('analytics_revenue')\n        .select('*')\n        .eq('period', period)\n        .order('date', { ascending: true })\n      if (error) throw error\n      return data\n    }\n  },\n\n  // Users\n  users: {\n    getAll: async () => {\n      const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .order('created_at', { ascending: false })\n      if (error) throw error\n      return data\n    },\n\n    getById: async (id) => {\n      const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .eq('id', id)\n        .single()\n      if (error) throw error\n      return data\n    }\n  }\n}\n\nexport default supabase "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}